/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventas.ventanas.paneles;

import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import ventas.configuraciones.globales;

/**
 *
 * @author samv
 */
public class frmProducto extends javax.swing.JFrame {

    /**
     * Creates new form frmProducto
     */
    
    private DefaultComboBoxModel modelo;
    private  List<Map<String,Object>> resultadoListaCateg = null;
    private List<Map<String,Object>> resultadoListaProducto = null;
    private JTable mitablaextranjera;
    
    private DefaultTableModel modeloTabla = null;
    public frmProducto() {
        initComponents();
        
        modelo = (DefaultComboBoxModel) listacategorias.getModel();
        
        
          String query = "select * from categoria order by id ";
           resultadoListaCateg = (List<Map<String, Object>>) globales.db.consulta(query, false);

        for (Map<String, Object> item : resultadoListaCateg) {
            modelo.addElement(item.get("nombre"));
        }
        
        
        query = "select * from productos order by folio ";
        
         resultadoListaProducto = (List<Map<String,Object>>) globales.db.consulta(query, false);
         
         
          modeloTabla = (DefaultTableModel) mitabla.getModel();
         
         for(Map<String,Object> item : resultadoListaProducto){
         
            modeloTabla.addRow(new Object[]{item.get("codigobarras"),item.get("nombre"),item.get("precio_venta")});
             
             
         }
        
        

    }
    
    
    //-.------------------------- otro consturctor-------------
        public frmProducto(JTable mitablaextranjera) {
        initComponents();
        panel1.setVisible(false);
        
        this.mitablaextranjera = mitablaextranjera;
        
        

       
        String query = "select * from productos order by folio ";
        
         resultadoListaProducto = (List<Map<String,Object>>) globales.db.consulta(query, false);
         
         
          modeloTabla = (DefaultTableModel) mitabla.getModel();
         
         for(Map<String,Object> item : resultadoListaProducto){
         
            modeloTabla.addRow(new Object[]{item.get("codigobarras"),item.get("nombre"),item.get("precio_venta")});
             
             
         }
        
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        mitabla = new javax.swing.JTable();
        panel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCodigoBarras = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        listacategorias = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        txtVentas = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        aceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mitabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo ", "Nombre", "Precio Venta"
            }
        ));
        mitabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mitablaMouseClicked(evt);
            }
        });
        mitabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mitablaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(mitabla);

        panel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel5.setText("Nombre");
        jLabel5.setToolTipText("");

        jLabel2.setText("Codigo barras");
        jLabel2.setToolTipText("");

        txtCodigoBarras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoBarrasKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoBarrasKeyTyped(evt);
            }
        });

        jLabel3.setText("Categorias");
        jLabel3.setToolTipText("");

        jLabel4.setText("Precio Venta");
        jLabel4.setToolTipText("");

        txtVentas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtVentasKeyTyped(evt);
            }
        });

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(txtCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(txtVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addGap(32, 32, 32)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(listacategorias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addGap(0, 60, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jButton1)))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(listacategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41))))
        );

        aceptar.setText("Aceptar");
        aceptar.setEnabled(false);
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGap(268, 268, 268)
                .addComponent(aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoBarrasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBarrasKeyPressed
        // TODO add your handling code here:}

    }//GEN-LAST:event_txtCodigoBarrasKeyPressed

    private void txtCodigoBarrasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBarrasKeyTyped

    }//GEN-LAST:event_txtCodigoBarrasKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
         String codigoBarra = txtCodigoBarras.getText();
            String precioVenta = txtVentas.getText();
            String nombre = txtnombre.getText();
             if(codigoBarra.trim().equals("")){
        JOptionPane.showMessageDialog(null, "Insertar el codigo barra porfavor");
        
        
        
        txtCodigoBarras.requestFocus();
        
        return;
            
            
            
        }
              if(nombre.trim().equals("")){
        JOptionPane.showMessageDialog(null, "Insertar el nombre porfavor");
        txtnombre
                .requestFocus();
        return;
            
            
            
        }
        if(precioVenta.trim().equals("")){
        JOptionPane.showMessageDialog(null, "Insertar el previo venta porfavor");
        
        txtVentas.requestFocus();
        return;
            
            
            
        }
        
        int opcion = JOptionPane.showConfirmDialog(null, "¿Deseas registrar el producto?");
        if(opcion == JOptionPane.YES_OPTION){
          

            int selectedcombo = listacategorias.getSelectedIndex();

            String id = String.valueOf(resultadoListaCateg.get(selectedcombo).get("id"));

            //Validación de que los ampos no esten vacio

            String query = "insert into productos (codigobarras,precio_venta,id_categoria,nombre) values ('%1$s',%2$s,%3$s,'%4$s')   returning *;";

            query = String.format(query,codigoBarra,precioVenta,id,nombre);

            List<Map<String,Object>> res = (List<Map<String,Object>>) globales.db.consulta(query, false);
            
            
            
            
            if(!res.isEmpty()){
            
                Map<String,Object> miobj = res.get(0);
                
                 modeloTabla.addRow(new Object[]{miobj.get("codigobarras"),miobj.get("nombre"),miobj.get("precio_venta")});
                
            }
           
            
            txtCodigoBarras.setText("");
            txtnombre.setText("");
            txtVentas.setText("");
            
            

            JOptionPane.showMessageDialog(null, "Registro insertado correctamente");

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtVentasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVentasKeyTyped

        
        if(Character.isDigit(evt.getKeyChar())){
        
        }else{
           evt.consume();
        }
       
        
    }//GEN-LAST:event_txtVentasKeyTyped

    private void mitablaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mitablaKeyPressed
      
        if(evt.getKeyCode() == 127){
        
            
               int opcion = JOptionPane.showConfirmDialog(null, "¿Deseas eliminar el registro de la base de datos");
            if (opcion == JOptionPane.YES_OPTION) {
            
                
                String folio = resultadoListaProducto.get(mitabla.getSelectedRow()).get("folio").toString();
                
                String query = "delete from productos where folio = "+folio;
                
                globales.db.consulta(query, true);
                
                JOptionPane.showMessageDialog(null, "Registro eliminado correctamente");
                
                
                modeloTabla.removeRow(mitabla.getSelectedRow());
            
            }
            
            
        }
        
    }//GEN-LAST:event_mitablaKeyPressed

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
        // TODO add your handling code here:
        
        
        
        
        int row = mitabla.getSelectedRow();
        
        
        
        Map<String,Object> objmapa = this.resultadoListaProducto.get(row);
        
        String folio = objmapa.get("folio").toString();
        
        
        String query = "select pp.*,cc.nombre as nombre_categoria from productos pp inner join categoria cc on \n" +
"  cc.\"id\" = pp.id_categoria where pp.folio ="+folio;
        
        List<Map<String,Object>> resultadoUnico = (List<Map<String,Object>>) globales.db.consulta(query, false);
        
        
        objmapa = resultadoUnico.get(0);
        
        
        
        
        DefaultTableModel mimodeloVentanaVentas = (DefaultTableModel) mitablaextranjera.getModel();
        
        mimodeloVentanaVentas.addRow(new Object[]{objmapa.get("codigobarras"),objmapa.get("nombre"),
        objmapa.get("nombre_categoria"),1,objmapa.get("precio_venta"),objmapa.get("precio_venta")});
        
        
        
        setVisible(false);
        
    }//GEN-LAST:event_aceptarActionPerformed

    private void mitablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mitablaMouseClicked
        aceptar.setEnabled(true);
        
        
        
    }//GEN-LAST:event_mitablaMouseClicked

    /**
     * @param args the command line arguments
     */
     
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmProducto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox listacategorias;
    private javax.swing.JTable mitabla;
    private javax.swing.JPanel panel1;
    private javax.swing.JTextField txtCodigoBarras;
    private javax.swing.JTextField txtVentas;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration//GEN-END:variables
}
